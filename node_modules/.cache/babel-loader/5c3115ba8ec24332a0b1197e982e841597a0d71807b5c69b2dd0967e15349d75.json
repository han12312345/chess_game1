{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\react-chess-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n// Square component (same as before)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n// Board component (modified for 15x15 grid)\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const size = 15;\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(Square, {\n    value: squares[i],\n    onSquareClick: () => handleClick(i)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), Array.from({\n      length: size\n    }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array.from({\n        length: size\n      }).map((_, colIndex) => {\n        const index = rowIndex * size + colIndex;\n        return renderSquare(index);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const size = 15;\n  const [history, setHistory] = useState([Array(size * size).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n// calculateWinner function (modified for Gomoku)\n_s(Game, \"xr63RHS18h7VqhquxsD2ywI4HI8=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const size = 15;\n  const lines = [\n  // Horizontal\n  ...Array.from({\n    length: size\n  }).map((_, row) => Array.from({\n    length: size - 4\n  }).map((_, col) => [row * size + col, row * size + col + 1, row * size + col + 2, row * size + col + 3, row * size + col + 4])),\n  // Vertical\n  ...Array.from({\n    length: size\n  }).map((_, col) => Array.from({\n    length: size - 4\n  }).map((_, row) => [row * size + col, (row + 1) * size + col, (row + 2) * size + col, (row + 3) * size + col, (row + 4) * size + col])),\n  // Diagonal (top-left to bottom-right)\n  ...Array.from({\n    length: size - 4\n  }).map((_, row) => Array.from({\n    length: size - 4\n  }).map((_, col) => [row * size + col, (row + 1) * size + col + 1, (row + 2) * size + col + 2, (row + 3) * size + col + 3, (row + 4) * size + col + 4])),\n  // Diagonal (top-right to bottom-left)\n  ...Array.from({\n    length: size - 4\n  }).map((_, row) => Array.from({\n    length: size - 4\n  }).map((_, col) => [row * size + (size - col - 1), (row + 1) * size + (size - col - 2), (row + 2) * size + (size - col - 3), (row + 3) * size + (size - col - 4), (row + 4) * size + (size - col - 5)]))].flat(2);\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d, e] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","size","handleClick","i","calculateWinner","nextSquares","slice","winner","status","renderSquare","Array","from","length","map","_","rowIndex","colIndex","index","_c2","Game","_s","history","setHistory","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","moves","move","description","_c3","lines","row","col","flat","a","b","c","d","e","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/react-chess-game/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\n// Square component (same as before)\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// Board component (modified for 15x15 grid)\nfunction Board({ xIsNext, squares, onPlay }) {\n  const size = 15;\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  const renderSquare = (i) => <Square value={squares[i]} onSquareClick={() => handleClick(i)} />;\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      {Array.from({ length: size }).map((_, rowIndex) => (\n        <div className=\"board-row\" key={rowIndex}>\n          {Array.from({ length: size }).map((_, colIndex) => {\n            const index = rowIndex * size + colIndex;\n            return renderSquare(index);\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function Game() {\n  const size = 15;\n  const [history, setHistory] = useState([Array(size * size).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// calculateWinner function (modified for Gomoku)\nfunction calculateWinner(squares) {\n  const size = 15;\n  const lines = [\n    // Horizontal\n    ...Array.from({ length: size }).map((_, row) =>\n      Array.from({ length: size - 4 }).map((_, col) => [\n        row * size + col,\n        row * size + col + 1,\n        row * size + col + 2,\n        row * size + col + 3,\n        row * size + col + 4,\n      ])\n    ),\n    // Vertical\n    ...Array.from({ length: size }).map((_, col) =>\n      Array.from({ length: size - 4 }).map((_, row) => [\n        row * size + col,\n        (row + 1) * size + col,\n        (row + 2) * size + col,\n        (row + 3) * size + col,\n        (row + 4) * size + col,\n      ])\n    ),\n    // Diagonal (top-left to bottom-right)\n    ...Array.from({ length: size - 4 }).map((_, row) =>\n      Array.from({ length: size - 4 }).map((_, col) => [\n        row * size + col,\n        (row + 1) * size + col + 1,\n        (row + 2) * size + col + 2,\n        (row + 3) * size + col + 3,\n        (row + 4) * size + col + 4,\n      ])\n    ),\n    // Diagonal (top-right to bottom-left)\n    ...Array.from({ length: size - 4 }).map((_, row) =>\n      Array.from({ length: size - 4 }).map((_, col) => [\n        row * size + (size - col - 1),\n        (row + 1) * size + (size - col - 2),\n        (row + 2) * size + (size - col - 3),\n        (row + 3) * size + (size - col - 4),\n        (row + 4) * size + (size - col - 5),\n      ])\n    ),\n  ].flat(2);\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d, e] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useState}from'react';// 渲染棋盘中的每个方格\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Square(_ref){let{value,onSquareClick}=_ref;return/*#__PURE__*/_jsx(\"button\",{className:\"square\",onClick:onSquareClick,children:value});}// 计算获胜者\nfunction calculateWinner(squares){let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:15;const directions=[{x:1,y:0},// 水平\n{x:0,y:1},// 垂直\n{x:1,y:1},// 主对角线\n{x:1,y:-1}// 副对角线\n];for(let row=0;row<size;row++){for(let col=0;col<size;col++){const currentPlayer=squares[row*size+col];if(!currentPlayer)continue;for(const direction of directions){let count=1;for(let step=1;step<5;step++){const nextRow=row+direction.y*step;const nextCol=col+direction.x*step;if(nextRow>=0&&nextRow<size&&nextCol>=0&&nextCol<size&&squares[nextRow*size+nextCol]===currentPlayer){count++;}else{break;}}if(count===5){return currentPlayer;// 如果找到五个连续的相同棋子，则返回获胜者\n}}}}return null;}// 棋盘组件\nfunction Board(_ref2){let{size,squares,onSquareClick}=_ref2;const board=[];// 渲染 15x15 的棋盘\nfor(let i=0;i<size;i++){const row=[];for(let j=0;j<size;j++){const index=i*size+j;row.push(/*#__PURE__*/_jsx(Square,{value:squares[index],onSquareClick:()=>onSquareClick(index)},index));}board.push(/*#__PURE__*/_jsx(\"div\",{className:\"board-row\",children:row},i));}return/*#__PURE__*/_jsx(_Fragment,{children:board});}// 游戏主组件\nexport default function Game(){const size=15;// 五子棋棋盘大小\nconst[history,setHistory]=useState([Array(size*size).fill(null)]);const[currentMove,setCurrentMove]=useState(0);const[xIsNext,setXIsNext]=useState(true);// X 先手\nconst currentSquares=history[currentMove];const winner=calculateWinner(currentSquares,size);function handlePlay(index){if(winner||currentSquares[index]){return;// 如果已有人获胜或该位置已有棋子，返回\n}const nextSquares=currentSquares.slice();nextSquares[index]=xIsNext?'X':'O';const nextHistory=[...history.slice(0,currentMove+1),nextSquares];setHistory(nextHistory);setCurrentMove(nextHistory.length-1);setXIsNext(!xIsNext);}function jumpTo(move){setCurrentMove(move);setXIsNext(move%2===0);}const moves=history.map((squares,move)=>{const description=move>0?`Go to move #${move}`:'Go to game start';return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>jumpTo(move),children:description})},move);});let status;if(winner){status=`Winner: ${winner}`;}else{status=`Next player: ${xIsNext?'X':'O'}`;}return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{size:size,squares:currentSquares,onSquareClick:handlePlay})}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:status}),/*#__PURE__*/_jsx(\"ol\",{children:moves})]})]});}","map":{"version":3,"names":["useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Square","_ref","value","onSquareClick","className","onClick","children","calculateWinner","squares","size","arguments","length","undefined","directions","x","y","row","col","currentPlayer","direction","count","step","nextRow","nextCol","Board","_ref2","board","i","j","index","push","Game","history","setHistory","Array","fill","currentMove","setCurrentMove","xIsNext","setXIsNext","currentSquares","winner","handlePlay","nextSquares","slice","nextHistory","jumpTo","move","moves","map","description","status"],"sources":["C:/Users/asus/Desktop/react-chess-game/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\n// 渲染棋盘中的每个方格\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// 计算获胜者\nfunction calculateWinner(squares, size = 15) {\n  const directions = [\n    { x: 1, y: 0 },  // 水平\n    { x: 0, y: 1 },  // 垂直\n    { x: 1, y: 1 },  // 主对角线\n    { x: 1, y: -1 }, // 副对角线\n  ];\n\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      const currentPlayer = squares[row * size + col];\n      if (!currentPlayer) continue;\n\n      for (const direction of directions) {\n        let count = 1;\n\n        for (let step = 1; step < 5; step++) {\n          const nextRow = row + direction.y * step;\n          const nextCol = col + direction.x * step;\n\n          if (\n            nextRow >= 0 &&\n            nextRow < size &&\n            nextCol >= 0 &&\n            nextCol < size &&\n            squares[nextRow * size + nextCol] === currentPlayer\n          ) {\n            count++;\n          } else {\n            break;\n          }\n        }\n\n        if (count === 5) {\n          return currentPlayer; // 如果找到五个连续的相同棋子，则返回获胜者\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\n// 棋盘组件\nfunction Board({ size, squares, onSquareClick }) {\n  const board = [];\n\n  // 渲染 15x15 的棋盘\n  for (let i = 0; i < size; i++) {\n    const row = [];\n    for (let j = 0; j < size; j++) {\n      const index = i * size + j;\n      row.push(\n        <Square\n          key={index}\n          value={squares[index]}\n          onSquareClick={() => onSquareClick(index)}\n        />\n      );\n    }\n    board.push(\n      <div className=\"board-row\" key={i}>\n        {row}\n      </div>\n    );\n  }\n\n  return <>{board}</>;\n}\n\n// 游戏主组件\nexport default function Game() {\n  const size = 15; // 五子棋棋盘大小\n  const [history, setHistory] = useState([Array(size * size).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true); // X 先手\n  const currentSquares = history[currentMove];\n  const winner = calculateWinner(currentSquares, size);\n\n  function handlePlay(index) {\n    if (winner || currentSquares[index]) {\n      return; // 如果已有人获胜或该位置已有棋子，返回\n    }\n\n    const nextSquares = currentSquares.slice();\n    nextSquares[index] = xIsNext ? 'X' : 'O';\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n  }\n\n  function jumpTo(move) {\n    setCurrentMove(move);\n    setXIsNext(move % 2 === 0);\n  }\n\n  const moves = history.map((squares, move) => {\n    const description = move > 0 ? `Go to move #${move}` : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else {\n    status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board size={size} squares={currentSquares} onSquareClick={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div className=\"status\">{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}